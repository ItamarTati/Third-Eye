{"version":3,"sources":["components/header/overwatchVideo.mp4","components/media/Media.js","components/roster/Roster.js","components/header/Header.js","components/teamData.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Media","react_default","a","createElement","className","class","data-height","data-dnt","data-theme","data-link-color","href","async","src","charset","width","height","frameborder","allow","allowfullscreen","title","Component","Roster","teamData","this","props","teamName","players","sort","b","playerName","map","item","concat","imgurl","alt","playerWiki","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isVideoVisible","toggleVideoVisibility","bind","assertThisInitialized","setState","poster","OverwatchVideo","preload","autoPlay","muted","loop","type","renderVideoModal","PureComponent","App","components_header_Header","Roster_Roster","Media_Media","Boolean","window","location","hostname","match","ReactDOM","render","components_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c279a740.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overwatchVideo.e7b227af.mp4\";","import React, { Component } from 'react';\nimport './Media.css'\nexport default class Media extends Component {\n    render()\n    {\n        return (\n            <div className = 'media'>\n                <h1>Media</h1> \n                <div className = 'container'>\n                    <div>\n                        <a class=\"twitter-timeline\" data-height=\"400\" data-dnt=\"true\" data-theme=\"light\" \n                        data-link-color=\"#2B7BB9\" href=\"https://twitter.com/Third_EyeEsport?ref_src=twsrc%5Etfw\">\n                        Tweets by Third_EyeEsport</a> <script async src=\"https://platform.twitter.com/widgets.js\" \n                        charset=\"utf-8\"></script>\n                    </div>\n                    <div> \n                        <iframe width=\"100%\" height=\"400\" src=\"https://www.youtube.com/embed/8WVPtPtDzz0\" \n                        frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                        allowfullscreen title = 'Clarity'></iframe>                 \n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n}\n","import React, { Component } from 'react';\nimport './Roster.css'\nexport default class Roster extends Component {\n    render(){\n        let teamData = this.props.teamData;\n        return (\n        <div className = 'roster'>   \n        <div>\n        <h2>{teamData.teamName}</h2>\n        \n        <div className='container'>\n        {teamData.players.sort(function(a, b){\n                if(a.playerName < b.playerName) { return -1; }\n                if(a.playerName > b.playerName) { return 1; }\n                return 0;\n        }).map((item) => {\n        return (\n        <div className='players'>\n                <img src = {(`${item.imgurl}`)} alt = {item.playerName}/> \n                <div className='players-overlay'>\n                <h1>{item.playerName}</h1>\n                <p>{item.playerWiki}</p>\n                </div>\n        </div>\n        )})}\n        </div>\n        </div>\n        </div> \n        )          \n}\n\n}\n","import OverwatchVideo from './overwatchVideo.mp4'\nimport React, { PureComponent } from 'react';\nimport './Header.css'\n\n\n//Users/itamartati/Documents/Itamar's Work/third-eye/src/Video\n\n\nclass Header extends PureComponent {\n    /**\n     * Creates the Header component.\n     *\n     * @param {Object} props\n     * @return {void}\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVideoVisible: false,\n        };\n\n        this.toggleVideoVisibility = this.toggleVideoVisibility.bind(this);\n    }\n\n    /**\n     * Toggles the video visibility.\n     *\n     * @return {void}\n     */\n    toggleVideoVisibility() {\n        const {\n            isVideoVisible,\n        } = this.state;\n\n        this.setState({ isVideoVisible: !isVideoVisible });\n    }\n\n    /**\n     * Renders video modal component.\n     *\n     * @return {ReactNode}\n     */\n\n\n    /**\n     * Renders component.\n     *\n     * @return {ReactNode}\n     */\n    render() {\n        const {\n            isVideoVisible,\n        } = this.state;\n\n        return (\n            <header >\n                <div >\n                    <div >\n                        {  (\n                            <video\n                                poster= {OverwatchVideo}\n                                preload=\"true\"\n                                autoPlay\n                                muted\n                                loop=\"loop\"\n                            >\n                                <source\n                                    src= {OverwatchVideo}\n                                    type=\"video/webm\"\n                                />\n                                <source\n                                    src={OverwatchVideo}\n                                    type=\"video/mp4\"\n                                />\n                            </video>\n                        ) }\n                    </div>\n                </div>\n                { isVideoVisible && this.renderVideoModal() }\n                <div><h1>The Love</h1></div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","let teamData =\n{ \n'teamName' : 'The Golden Lions', \n\"players\":[\n    {\n      \"playerName\":\"Brigitte\",\n      \"imgurl\":\"/images/Icon-Brigitte.png\",\n      \"playerWiki\":`Brigitte is the youngest daughter of Torbj√∂rn and Ingrid Lindholm, and is a traveling companion \n      of Reinhardt Wilhelm. No longer sitting on the sidelines, Brigitte Lindholm has taken up arms to defend those \n      in need of protection. She is very stubborn, a trait inherited from her father. Brigitte spars with Reinhardt \n      every day. Afterwards, she and Reinhardt go to a pub or tavern to relax. She likes doughnuts, and loves semlor`\n    },\n    {\n        \"playerName\":\"Mercy\",\n        \"imgurl\":\"/images/Icon-Mercy.png\",\n        \"playerWiki\":`A guardian angel to those who come under her care, Dr. Angela Ziegler is a peerless healer, a \n        brilliant scientist, and a staunch advocate for peace. She is one of the most gifted doctors in the world when\n         it comes to medical technology, and has applied such technology to her own body; effects have possibly included \n         slowing/halting her ageing process. She likes Swiss chocolate.`\n      },\n    {\n        \"playerName\":\"Reinhardt\",\n        \"imgurl\":\"/images/Icon-Reinhardt.png\",\n        \"playerWiki\":`Reinhardt Wilhelm styles himself as a champion of a bygone age, who lives by the knightly codes \n        of valor, justice, and courage. Possessing an \"active imagination,\" he enjoys eating currywurst, and is a fan \n        of David Hasselhoff's music. He spars with Brigitte every day, after which they go to a pub or tavern to relax.`\n      },\n    {\n        \"playerName\":\"Bastion\",\n        \"imgurl\":\"/images/Icon-Bastion.png\",\n        \"playerWiki\":`Once a frontline combatant in the devastating Omnic Crisis, Bastion has all but lost its combat \n        programming and now explores its surroundings, fascinated by the world and its inhabitants. Though Bastion's new \n        nature is gentle, its core combat programming takes over when the unit senses danger, utilizing its entire arsenal \n        to eliminate anything it perceives as a threat. This has led to instances of conflict with the few humans it has \n        encountered, and it tries to avoid populated areas in favor of the wild, uncharted regions of the world.`\n      },\n    {\n        \"playerName\":\"Baptiste\",\n        \"imgurl\":\"/images/Baptiste_portrait.png\",\n        \"playerWiki\":`An elite combat medic and ex-Talon operative, Baptiste now uses his skills to help those whose \n        lives have been impacted by war. He possesses an innate desire to help people. In correspondence obtained by \n        Trung Le Nguyen, Cuerva noted that Baptiste is a skilled marksman despite being a medic, and boasted unusually \n        high endurance, versatility, and even luck. Baptiste loves to eat‚Äîit's been suggested that his favorite dish is \n        pork griot and lalo.`\n      },\n    {\n        \"playerName\":\"D.Va\",\n        \"imgurl\":\"/images/Icon-D.Va.png\",\n        \"playerWiki\":`D.Va is a former professional gamer who now uses her skills to pilot a state-of-the-art mech in \n        defense of her homeland. She is a very competitive individual, and coupled with her pro-gamer skills, this \n        makes her an extremely effective mech pilot. Never backing down, D.Va always plays to win. While she projects a \n        carefree, irreverant attitude, D.Va is burdened by the emotional cost of defending her homeland, and the facade the \n        South Korean media projects on her. In addition to skills as a mech pilot, D.Va is also a competent mechanic.`\n      },\n  ]\n\n\n}\nexport default teamData","import React, { Component } from 'react';\nimport './App.css';\nimport Media from '../media/Media'\nimport Roster from '../roster/Roster'\nimport Header from '../header/Header'\nimport teamData from '../teamData'\n// src/teamData.js\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\"> \n        <Header teamData={teamData}/>\n        <Roster teamData={teamData}/>\n        <Media teamData={teamData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}